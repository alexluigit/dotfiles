# Use Emacs mode (since EDITOR=nvim, if you bindkey -e,  zsh will turn on vi-mode automatically)
bindkey -e
bindkey '^f' delete-word
bindkey '^j' backward-kill-line
bindkey '^l' delete-char

# Mkdir and cd into immediately
function take() {
  mkdir -p $@ && cd ${@:$#}
}

# Up a dir
up_widget() {
  BUFFER="cd .."
  zle accept-line
}
zle -N up_widget
bindkey "^\\" up_widget

# Better cd experience
fzf_cd() {
  BUFFER='cd "$(dirname "$(fzf)")"'
  zle accept-line
}
zle -N fzf_cd
bindkey '^o' fzf_cd

# Better history searching
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Edit the current command line in $EDITOR
autoload edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line


# Autosuggest
bindkey '^[[1;5C' vi-forward-word
bindkey '^[[1;5D' vi-backward-word

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# Quit vifm and change dir
# vicd()
# {
#   local dst="$(command vifm --choose-dir - "$@")"
#     if [ -z "$dst" ]; then
#       echo 'Directory picking cancelled/failed'
#         return 1
#         fi
#         cd "$dst"
# }
# bindkey -s '^o' 'vicd\n'
