" vim: filetype=vim :
set vicmd=nvim " Command used to edit files in various contexts.  The default is vim.
set syscalls " This makes vifm perform file operations on its own instead of relying on standard utilities like `cp`.
set trash " Trash Directory, better do not change it. 
set history=100 " This is how many directories to store in the directory history.
set nofollowlinks " Automatically resolve symbolic links on l or Enter.
set sortnumbers " Natural sort of (version) numbers within text.
set undolevels=100
set vimhelp " Use Vim's format of help file, opposite is 'novimhelp'
set norunexec " Press return to run executable.
colorscheme gruvbox
set timefmt=%m/%d\ %H:%M " See man date or man strftime for details.
set wildmenu " Show list of matches on tab completion in command-line mode
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers " Display suggestions in normal, visual and view modes for keys, marks and registers (at most 5 files). 
set ignorecase
set smartcase
set nohlsearch
set incsearch
set scrolloff=4 " Try to leave some space from cursor to upper/lower border in lists
set slowfs=curlftpfs " Don't do too many requests to slow file systems
set statusline=" %A%10u:%-7g %=%20d  "

mark b ~/bin/
mark h ~/

" What should be saved automatically between vifm sessions.  Drop "savedirs" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks
filter /^.*\.(DS_Store|hushlogin|CFUserTextEncoding|zcompdump)$/

" Like leader in vim
nnoremap <space>q :q<cr>
" Display sorting dialog
nnoremap s :sort<cr>
" Start shell in current directory
nnoremap S :shell<cr>
" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv
" Open file in the background using its default program
nnoremap o :!open -g %f<cr>
" Yank current directory path into the clipboard
nnoremap yd :!printf %d | pbcopy<cr>
" Yank current file path into the clipboard
nnoremap yf :!printf %c:p | pbcopy<cr>
" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw
" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap <space>c :write | edit $MYVIFMRC | restart<cr>
" Toggle wrap setting on ,w key
nnoremap <space>w :set wrap!<cr>
" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart

source $VIFM/scripts/filetypes

" ----------------------- Settings documentation -------------------------------
" ------------------------------------------------------------------------------
" Open file in new MacVim tab
" nnoremap o :!mvim --remote-tab-silent %f<cr>
" Open file in new MacVim window
" nnoremap O :!mvim %f<cr>
" View preview in Quick Look
" nnoremap q :!qlmanage -p %f > /dev/null 2>&1<cr>

" ------------------------------------------------------------------------------
" set vicmd=elvis\ -G\ termcap
" set fastrun " Enable enter commands with unambiguous beginning (e.g :!Te instead of !Terminal)

" ------------------------------------------------------------------------------
" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

" ------------------------------------------------------------------------------
" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" Spaces in an app name will have to be escaped e.g. QuickTime\ Player.app
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" ------------------------------------------------------------------------------
" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For OS X:
" filetype * open

" Examples of configuring both panels
" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{}.
" Filter-out build and temporary files
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------
" Various customization examples

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
" let $VIFM_SERVER_NAME = v:servername

