#!/bin/sh
nvimPath='config/nvim/pack/bundle/opt/'
zshPath='config/zsh/plugins/'
appPath='local/apps/'

add() {
  local mName=$(sed 's|.*/||' <<< "$1")
  echo "1) nvim -> $nvimPath$mName"
  echo "2) zsh  -> $zshPath$mName"
  echo "3) apps  -> $appPath$mName"
  read -p "Please choose target directory : " REPLY
  case $REPLY in
    1) iPath=$nvimPath; iType="vim";;
    2) iPath=$zshPath; iType="zsh";;
    3) iPath=$appPath; iType="apps";;
    *) echo "Invalid option. Exit" && exit 1;;
  esac
  echo "Installing to $iPath$mName"
  if [[ $(needStash) -eq 1 ]]; then
    git stash --include-untracked && git submodule add --name $mName $1 $iPath$mName
    git commit -m "chore($iType): add submodule $mName"; git stash pop
  else
    git submodule add --name $mName $1 $iPath$mName && git commit -m "chore($iType): add submodule $mName"
  fi
}

remove() {
  local mPath=$(git submodule | grep "$1" | awk '{print $2}')
  [[ $(echo "$mPath" | wc -l) -gt 1 ]] && echo "More than 1 match" && echo $mPath && exit 1
  local mName=$(sed 's|.*/||' <<< "$mPath")
  local iPath=${mPath%"$mName"}
  case $iPath in
    $nvimPath) iType="vim";;
    $zshPath) iType="zsh";;
    $appPath) iType="apps";;
    *) echo "Invalid install path. Exit" && exit 1;;
  esac
  __removeHelper
}

__removeHelper() {
  git submodule deinit -f "$mPath" && \
  git rm -f "$mPath" && git commit -m "chore($iType): remove submodule $mName" && \
  rm -rf ".git/modules/$mName"
}

update() {
  local mPath=$(git submodule | grep "$1" | awk '{print $2}')
  [[ $(echo "$mPath" | wc -l) -gt 1 ]] && echo "More than 1 match" && echo $mPath && exit 1
  git submodule update --recursive --remote $mPath
}

updateall() {
  git submodule update --recursive --remote
}

"$@"
