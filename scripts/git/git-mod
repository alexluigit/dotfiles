#!/bin/sh
add() {
  local nvimPath='nvim/pack/bundle/opt/'
  local zshPath='zsh/plugins/'
  local mName=$(sed 's|.*/||' <<< "$1")
  echo "1) nvim -> $nvimPath$mName"
  echo "2) zsh  -> $zshPath$mName"
  read -p "Please choose target directory : " REPLY
  case $REPLY in
    1) iPath=$nvimPath;;
    2) iPath=$zshPath;;
    *) echo "Invalid option. Exit" && exit 1;;
  esac
  echo "Installing to $iPath$mName"
  if [[ $(needStash) -eq 1 ]]; then
    git stash --include-untracked && git submodule add --name $mName $1 $iPath$mName
    git commit -m "Add submodule $mName"; git stash pop
  else
    git submodule add --name $mName $1 $iPath$mName && git commit -m "Add submodule $mName"
  fi
}

remove() {
  local mPath=$(git submodule | grep "$1" | awk '{print $2}')
  [[ $(echo "$mPath" | wc -l) -gt 1 ]] && echo "More than 1 match" && echo $mPath && exit 1
  local mName=$(sed 's|.*/||' <<< "$mPath")
  [[ $(needStash) -eq 1 ]] && { git stash --include-untracked && removeHelper && git stash pop; } || { removeHelper; }
}

removeHelper() {
  git submodule deinit -f "$mPath" && \
  git rm -f "$mPath" && git commit -m "Remove submodule $mName" && \
  rm -rf ".git/modules/$mName"
}

update() {
  git submodule foreach git pull origin master
}

needStash() {
  local status
  status=$(git status --porcelain 2> /dev/null | tail -n1)
  [[ -n $status ]] && { echo 1; } || { echo 0; }
}
"$@"
