# Maintainer: Alex Lu <alexluigit@gmail.com>

pkgname="emacs-git"
pkgrel=1
pkgdesc="GNU Emacs. Development master branch."
arch=('x86_64')
url="http://www.gnu.org/software/emacs/"
license=('GPL3')
depends=('alsa-lib' 'gnutls' 'libxml2' 'jansson' 'gpm' 'm17n-lib' 'libotf' 'harfbuzz' 'gtk3' 'libjpeg-turbo' 'giflib' 'libgccjit')
makedepends=('git' 'xorgproto')
provides=('emacs' 'emacs26-git' 'emacs-27-git' 'emacs28-git' 'emacs-seq')
conflicts=('emacs' 'emacs26-git' 'emacs-27-git' 'emacs28-git' 'emacs-seq')
replaces=('emacs' 'emacs26-git' 'emacs-27-git' 'emacs28-git' 'emacs-seq')
source=("emacs-git::git+https://github.com/emacs-mirror/emacs.git")
options=(!strip)
b2sums=('SKIP')

pkgver() {
  cd "$srcdir/emacs-git"

  printf "%s.%s" \
    "$(grep AC_INIT configure.ac | \
    sed -e 's/^.\+\ \([0-9]\+\.[0-9]\+\.[0-9]\+\?\).\+$/\1/')" \
    "$(git rev-list --count HEAD)"
}

# There is no need to run autogen.sh after first checkout.
# Doing so, breaks incremental compilation.
prepare() {
  cd "$srcdir/emacs-git"
  [[ -x configure ]] || ( ./autogen.sh git && ./autogen.sh autoconf )
}

build() {
  cd "$srcdir/emacs-git"

  local _conf=(
    --prefix=/usr
    --sysconfdir=/etc
    --libexecdir=/usr/lib
    --localstatedir=/var
    --mandir=/usr/share/man
    --with-gameuser=:games
    --with-sound=alsa
    --with-modules
    --without-gconf
    --without-gsettings
    --with-native-compilation
    --with-x-toolkit=gtk3
    --without-xaw3d
    --without-compress-install
    --program-transform-name=s/\([ec]tags\)/\1.emacs/
  )

  ./configure "${_conf[@]}"

  # Using "make" instead of "make bootstrap" enables incremental
  # compiling. Less time recompiling. Yay! But you may
  # need to use bootstrap sometimes to unbreak the build.
  # Just add it to the command line.
  #
  # Please note that incremental compilation implies that you
  # are reusing your src directory!
  #
  make

  # You may need to run this if 'loaddefs.el' files become corrupt.
  #cd "$srcdir/emacs-git/lisp"
  #make autoloads
  #cd ../
}

package() {
  cd "$srcdir/emacs-git"
  make DESTDIR="$pkgdir/" install
  mkdir -p "$pkgdir"/var/games/emacs
  chmod 775 "$pkgdir"/var/games
  chmod 775 "$pkgdir"/var/games/emacs
}

post_install() {
    # fix user/root permissions on usr/share files
    find "$pkgdir"/usr/share/emacs/ | xargs chown root:root
    # make sure directory has the correct owner and group
    chown -R root:games "$pkgdir"/var/games
}
