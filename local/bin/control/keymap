#!/usr/bin/env sh
main() {
  local MODIFIER_ON=0 OPTSTR='@%:'
  for i in {{a..z},{A..Z}}; do OPTSTR+=$i; done
  while getopts $OPTSTR opt; do
    case $opt in
      @) MODIFIER_ON=1;;
      %) case $OPTARG in
           AltE) xdotool keyup e key --clearmodifiers Up;;
           AltN) xdotool keyup n key --clearmodifiers Down;;
           Delete) send_key "\[F12]";;
           Escape) ~/.config/rofi/scripts/powermenu;;
           F10) volumectl mute;;
           F11) volumectl down;;
           F12) volumectl up;;
           F7) exec music-control previous;;
           F8) exec music-control play-pause;;
           F9) exec music-control next;;
           Return) exec floatwin -t -d $FLOAT_DIMENSION fmenu;;
           Sleep) multilockscreen -s;;
           mouse1) send_key "\Cx";;
           mouse2) send_key "\Aa";;
         esac;;
      C) sleep 0.2 && xdotool click 1;;
      D) exec bravectl dev;;
      E) run_emacs;;
      N) nautilus;;
      S) flameshot full -p ~/pictures/screenshots;;
      T) ~/.config/rofi/scripts/sessions;;
      V) exec floatwin -b murl -c mpv -d 960x540+2870+60 murl temp;;
      a) rofi -show drun -theme ~/.config/rofi/themes/launcher.rasi;;
      e) xvimux north;;
      f) toggle_monocle;;
      h) xvimux west;;
      i) xvimux east;;
      l) exec floatwin -t -d 1920x2160+0+0 lfrun;;
      m) exec floatwin -t -d 1500x600+10+60 ncmpcpp;;
      n) xvimux south;;
      q) ctrl 'xdo close' 'xdo kill'; quit_monocle;;
      r) rofi -show run -theme ~/.config/rofi/themes/dmenu.rasi;;
      t) quit_monocle; exec alacritty;;
      v) paste;;
      w) quit_monocle; ctrl "exec bravectl start" "exec bravectl inco";;
      x) send_key "\Ax";;
    esac
  done;
}

paste() {
  _paste() { xdotool keyup v key --clearmodifiers ctrl+"$1"v; }
  classes=("Alacritty" "ncmpcpp" "lfrun" "dropterm")
  [[ "${classes[@]}" == *"$(_focus_wclass)"* ]] && _paste shift+ || _paste
}
run_emacs() {
  wid=$(xdotool search --onlyvisible --class 'Emacs')
  [[ -n $wid ]] && xdotool windowactivate $wid || exec emacsclient -c
}
quit_monocle() { $(_is_monocle) && toggle_monocle; }
ctrl() { [[ $MODIFIER_ON == "0" ]] && eval $1 || eval $2; }
send_key() { xvkbd -xsendevent -text $1; }
toggle_monocle() { bspc desktop -l next; }
_focus() { xdotool getwindowfocus; }
_focus_wclass() { xprop -id $(_focus) WM_CLASS | cut -d '"' -f 4; }
_is_monocle() { [ "$(bspc wm -g | awk -F: '{print $(NF-2)}')" == "LM" ]; }

main $@
