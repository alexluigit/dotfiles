unbind C-b
set -g prefix C-Space
set -g base-index 1
bind s split-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind '<' swap-window -d -t '{previous}' # Move window left.
bind '>' swap-window -d -t '{next}' # Move window right.
bind ^space last-window
bind -n F1 if '[ #{pane_current_command} = nvim ]' 'resize-pane -Z; select-pane -R' 'select-pane -L; resize-pane -Z'
bind -n F2 previous-window
bind -n F3 next-window
bind -n F12 if '[ #{pane_mode} = tree-mode ]' 'send-keys C-g' 'choose-tree -Zs'
bind x kill-window
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
# Search back to last prompt (mnemonic: "[b]ack").
bind b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward 'âžœ'\; send-keys -X next-word
bind -T copy-mode-vi / command-prompt -i -p "search down:" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up:" "send -X search-backward-incremental \"%%%\""
# Golbal settings
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',*256col*:Tc'
set -s escape-time 0
set -g focus-events on
# Appearance
set -go @color-current '#00ff5f'
set -gF status-style bg='#282c34'
set -gwF window-status-style fg='#8a8a8a'
set -gwF window-status-current-style 'fg=#{@color-current},bold,bright'
set -gF  message-style bg='#282c34'
set -gF status-left '  '
set -gF status-justify left
set -gw window-status-format         ' #W '
set -gw window-status-current-format ' #W '
set -g status-right ''

# Smart pane switching with awareness of vim splits
# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-k" "select-pane -U"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-j" "select-pane -D"
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-h" "select-pane -L"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-l" "select-pane -R"

# Pane resize, remap to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
