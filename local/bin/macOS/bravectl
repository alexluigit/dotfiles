#!/usr/bin/env bash
EXE="brave"
INCO_DATA_DIR=$HOME/.local/share/BraveSoftware/Inco
MUSIC_DATA_DIR=$HOME/.local/share/BraveSoftware/Music
USE_FLOATW=true
[[ $(uname) == "Darwin" ]] && {
  EXE="/Applications/Brave Browser.app/Contents/MacOS/Brave Browser"
  USE_FLOATW=false
}
# â€“-test-type would disable any warning messages. Not the best solution, but it works.
START_FLAGS=(--extensions-on-chrome-urls --test-type)
[[ $(pgrep xray) ]] && START_FLAGS+=(--proxy-server=http://127.0.0.1:10801)
# ## Fallback proxy: paru geph4-client; geph4-client (config: /etc/default/geph4-client)
# START_FLAGS=(--proxy-server=http://127.0.0.1:9910)
MUSIC_FLAG=(--user-data-dir="$MUSIC_DATA_DIR" --start-fullscreen music.youtube.com)
FLOATW_WEB_FLAG=(-c Brave-browser:brave-browser)
FLOATW_INCO_FLAG=(-i 1 -g 2050x2050+5+5 -n "New Private Tab - Brave" -c Inco:)
BRAVE_INCO_FLAG=(--user-data-dir="$INCO_DATA_DIR" --class=Inco --incognito)

_osc_activate() {
  local pid=$(ps aux | grep "$1" | awk '{print $2}')
  [[ -z "$pid" ]] && { "$EXE" ${START_FLAGS[@]} 2>&1; } || {
    local hasWindow=$(osascript -e "
tell application \"System Events\"
  set frontmost of the first process whose unix id is $pid to true
  delay 0.3 -- wait for the frontmost lifting command above
  tell (the first process whose unix id is $pid)
    return (exists windows)
  end tell
end tell")
    $hasWindow || { kill $pid; "$EXE" ${START_FLAGS[@]} 2>&1;};};}
_rmpki() { sleep 5 && rm -rf ~/.pki; }
_web_mac() { START_FLAGS+=(--arbitary-fake-args); _osc_activate '[a]rbitary-fake-args';}
_music_mac() { _osc_activate '[s]tart-fullscreen music.youtube.com'; }
_inco_mac() { _osc_activate '[c]lass=Inco --incognito'; }
_web_linux() { floatwin "${FLOATW_WEB_FLAG[@]}" "$EXE" ${START_FLAGS[@]}; exit; }
_music_linux() { "$EXE" ${START_FLAGS[@]}; exit; }
_inco_linux() { floatwin "${FLOATW_INCO_FLAG[@]}" "$EXE" ${START_FLAGS[@]}; exit; }

music() {
  START_FLAGS+=("${MUSIC_FLAG[@]}")
  "$USE_FLOATW" && _music_linux || _music_mac
}
web() {
  "$USE_FLOATW" && _web_linux || _web_mac
}
incognito() {
  START_FLAGS+=("${BRAVE_INCO_FLAG[@]}")
  "$USE_FLOATW" && _inco_linux || _inco_mac
}

_rmpki &

"$@"
